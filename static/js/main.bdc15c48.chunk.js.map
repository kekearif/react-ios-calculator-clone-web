{"version":3,"sources":["logic/calculate.js","component/Container.js","component/OutputRow.js","component/Row.js","component/Button.js","component/DefaultButton.js","component/LongButton.js","component/FunctionButton.js","component/SpecialButton.js","component/ButtonRows.js","component/TopPanel.js","component/BottomPanel.js","App.js","index.js"],"names":["DIGIT_LIMIT","CALCULATE","hasProceedingOperator","console","log","evalString","slice","includes","isNegativeNumber","string","charAt","convertToExponential","normalForm","Number","toString","length","toExponential","operate","total","value","evaluate","didTapEquals","eval","substring","number","calculate","isOperator","Container","props","className","children","OutputRow","Row","Button","buttonClassName","type","textClassName","text","selectedOperator","onClick","clickHandler","DefaultButton","LongButton","FunctionButton","SpecialButton","ButtonRows","useState","setSelectedOperator","TopPanel","href","width","height","src","class","alt","data-recalc-dims","BottomPanel","Calculator","setTotal","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdc15c48.chunk.js","sourcesContent":["// Constants\n\n// Need to change this limit for different size screens\n// Might need to also change the font size\nconst DIGIT_LIMIT = 7;\n\n// Global Vars\n\nlet CALCULATE = {};\nCALCULATE.evalString  = '0';\nCALCULATE.didTapEquals = false;\n\n// Helper Functions\n\nfunction hasProceedingOperator() {\n  console.log('slice ' + CALCULATE.evalString.slice(-1));\n  return ['+', '-', '*', '/'].includes(CALCULATE.evalString.slice(-1));\n}\n\nfunction isNegativeNumber(string) {\n  return string.charAt(0) === '-';\n}\n\nfunction convertToExponential(string) {\n  // Always convert back to a standard number first\n  let normalForm = Number(string).toString()\n\n  if (normalForm.length > DIGIT_LIMIT) {\n    return Number(normalForm).toExponential(2).toString();\n  }\n  return normalForm;\n}\n\n// Main Functions\n\nfunction operate(total, value) {\n  // Use new operator\n  if (hasProceedingOperator()) {\n    CALCULATE.evalString = CALCULATE.evalString.slice(0, -1);\n  }\n\n  let evaluate;\n\n  switch (value) {\n    case 'AC':\n      CALCULATE.didTapEquals = false;\n      CALCULATE.evalString  = '0';\n      return '0';\n    case '+/-':\n      evaluate = eval(CALCULATE.evalString ).toString();\n      if (isNegativeNumber(evaluate)) {\n        evaluate = evaluate.substring(1);\n        CALCULATE.evalString  = evaluate;\n        return evaluate;\n      } else if (evaluate !== '0') {\n        CALCULATE.evalString  = '-' + evaluate;\n        return '-' + evaluate;\n      } else {\n        return evaluate;\n      }\n    case '%':\n      evaluate = eval(CALCULATE.evalString ).toString();\n      evaluate = eval(evaluate + '/100').toString();\n      CALCULATE.evalString  = evaluate;\n      return convertToExponential(evaluate);\n    case '+':\n      CALCULATE.didTapEquals = false;\n      evaluate = eval(CALCULATE.evalString ).toString();\n      CALCULATE.evalString  = evaluate + value;\n      return convertToExponential(evaluate);\n    case '-':\n      CALCULATE.didTapEquals = false;\n      evaluate = eval(CALCULATE.evalString ).toString();\n      CALCULATE.evalString  = evaluate + value;\n      return convertToExponential(evaluate);\n    case 'x':\n      CALCULATE.didTapEquals = false;\n      evaluate = eval(CALCULATE.evalString ).toString();\n      CALCULATE.evalString  = evaluate + '*';\n      return convertToExponential(evaluate);\n    case 'รท':\n      CALCULATE.didTapEquals = false;\n      evaluate = eval(CALCULATE.evalString ).toString();\n      CALCULATE.evalString  = evaluate + '/';\n      return convertToExponential(evaluate);\n    case '=':\n      evaluate = eval(CALCULATE.evalString ).toString();\n      CALCULATE.evalString  = evaluate;\n      CALCULATE.didTapEquals = true;\n      return convertToExponential(evaluate);\n    default:\n      break;\n  }\n}\n\nfunction number(total, value) {\n  // Decimal handling\n  if (value === '.') {\n    if (hasProceedingOperator()) {\n      CALCULATE.evalString = CALCULATE.evalString + '0.';\n      return '0.';\n    } else if (CALCULATE.didTapEquals) {\n      CALCULATE.evalString = '0.'\n      CALCULATE.didTapEquals = false;\n      return CALCULATE.evalString;\n    } else if (total.length === DIGIT_LIMIT - 1) {\n      return total;\n    } else if (total.includes('.')) {\n      return total;\n    } else {\n      CALCULATE.evalString  = CALCULATE.evalString  + value;\n      return total + value;\n    }\n  }\n\n  // Nothing to operate on if it has a proceeding operator\n  if (hasProceedingOperator()) {\n    CALCULATE.evalString  = CALCULATE.evalString  + value;\n    return value;\n  }\n\n  // Limit handling\n  if (total.length === DIGIT_LIMIT) {\n    return total;\n  }\n\n  // Clear display if equals was tapped\n  if (CALCULATE.didTapEquals) {\n    CALCULATE.evalString  = '0';\n    CALCULATE.didTapEquals = false;\n  }\n  // Number handling\n  if (CALCULATE.evalString  === '0') {\n    CALCULATE.evalString  = value;\n    return value;\n  } else if (CALCULATE.evalString  === '-0') {\n    CALCULATE.evalString  = '-' + value;\n    return '-' + value;\n  } else {\n    CALCULATE.evalString  = CALCULATE.evalString  + value;\n    return total + value;\n  }\n}\n\nexport default function calculate(total, isOperator, value) {\n  if (isOperator) {\n    return operate(total, value);\n  }\n  return number(total, value);\n}\n","import React from 'react';\nimport '../App.css';\n\nfunction Container(props) {\n  return <div className=\"Container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction OutputRow(props) {\n  return <div className=\"Calculator-row Output-row\">{props.children}</div>;\n}\n\nexport default OutputRow;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction Row(props) {\n  return <div className=\"Calculator-row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction Button(props) {\n  let buttonClassName = \"Button-default\" + (` ${props.type}` || \"\" );\n  let textClassName = \"Text-default\" + (` ${props.text}` || \"\" );\n  if (props.selectedOperator === props.value) {\n    buttonClassName += \" Button-function-selected\";\n    textClassName += \" Text-default-selected\";\n  }\n\n  return (\n    <button\n      className={buttonClassName}\n      onClick={props.clickHandler}>\n      <div className={textClassName}>\n        {props.value}\n      </div>\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction DefaultButton(props) {\n  return <Button\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default DefaultButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction LongButton(props) {\n  return <Button\n          type=\"Button-long\"\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default LongButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction FunctionButton(props) {\n  return <Button\n          type=\"Button-function\"\n          value={props.value}\n          selectedOperator = {props.selectedOperator}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default FunctionButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction SpecialButton(props) {\n  return <Button\n          type=\"Button-special\"\n          text=\"Text-special\"\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default SpecialButton;\n","import React, { useState } from 'react';\nimport Row from './Row';\nimport DefaultButton from './DefaultButton';\nimport LongButton from './LongButton';\nimport FunctionButton from './FunctionButton';\nimport SpecialButton from './SpecialButton';\nimport '../App.css';\n\nfunction ButtonRows(props) {\n  const [selectedOperator, setSelectedOperator] = useState(null);\n\n  function clickHandler(isOperator, value) {\n    setSelectedOperator(value);\n    props.clickHandler(isOperator, value);\n  }\n\n  return (\n    <div>\n      <Row>\n        <SpecialButton value=\"AC\"\n          clickHandler={() => clickHandler(true, 'AC')} />\n        <SpecialButton value=\"+/-\"\n          clickHandler={() => clickHandler(true, '+/-')} />\n        <SpecialButton value=\"%\"\n          clickHandler={() => clickHandler(true, '%')} />\n        <FunctionButton value=\"รท\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler(true, 'รท')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"7\"\n          clickHandler={() => clickHandler(false, '7')} />\n        <DefaultButton value=\"8\"\n          clickHandler={() => clickHandler(false, '8')} />\n        <DefaultButton value=\"9\"\n          clickHandler={() => clickHandler(false, '9')} />\n        <FunctionButton value=\"x\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler(true, 'x')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"4\"\n          clickHandler={() => clickHandler(false, '4')} />\n        <DefaultButton value=\"5\"\n          clickHandler={() => clickHandler(false, '5')} />\n        <DefaultButton value=\"6\"\n          clickHandler={() => clickHandler(false, '6')} />\n        <FunctionButton value=\"-\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler(true, '-')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"1\"\n          clickHandler={() => clickHandler(false, '1')} />\n        <DefaultButton value=\"2\"\n          clickHandler={() => clickHandler(false, '2')} />\n        <DefaultButton value=\"3\"\n          clickHandler={() => clickHandler(false, '3')} />\n        <FunctionButton value=\"+\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler(true, '+')} />\n      </Row>\n      <Row>\n        <LongButton value='0'\n          clickHandler={() => clickHandler(false, '0')} />\n        <DefaultButton value=\".\"\n          clickHandler={() => clickHandler(false, '.')} />\n        <FunctionButton value=\"=\"\n          clickHandler={() => clickHandler(true, '=')} />\n      </Row>\n    </div>\n  );\n}\n\nexport default ButtonRows;\n","import React from 'react';\nimport '../App.css';\n\nfunction TopPanel() {\n  return (\n    <div className=\"Top-panel\">\n      <a href=\"https://github.com/kekearif/react-ios-calculator-clone\">\n        <img width=\"149\"\n             height=\"149\"\n             src=\"https://github.blog/wp-content/uploads/2008/12/fo\nrkme_left_white_ffffff.png?resize=149%2C149\"\n             class=\"attachment-full size-full\" alt=\"Fork me on GitHub\"\n             data-recalc-dims=\"1\" />\n      </a>\n    </div>\n  );\n}\n\nexport default TopPanel;\n","import React from 'react';\nimport '../App.css';\n\nfunction BottomPanel() {\n  return (\n    <div className=\"Bottom-panel\">\n      <div className=\"Indicator\"></div>\n    </div>\n  );\n}\n\nexport default BottomPanel;\n","import React, { useState } from 'react';\nimport Container from './component/Container';\nimport OutputRow from './component/OutputRow';\nimport ButtonRows from './component/ButtonRows';\nimport TopPanel from './component/TopPanel';\nimport BottomPanel from './component/BottomPanel';\nimport calculate from './logic/calculate';\nimport './App.css';\n\nfunction Calculator() {\n  const [total, setTotal] = useState('0');\n\n  function clickHandler(isOperator, value) {\n    setTotal(calculate(total, isOperator, value));\n  }\n\n  return (\n    <div className=\"Calculator\">\n      <TopPanel />\n      <OutputRow>{total}</OutputRow>\n      <ButtonRows clickHandler={clickHandler} />\n      <BottomPanel />\n    </div>\n  );\n}\n\nfunction App() {\n  return <Container><Calculator /></Container>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}