{"version":3,"sources":["component/Container.js","component/OutputRow.js","component/Row.js","component/Button.js","component/DefaultButton.js","component/LongButton.js","component/FunctionButton.js","component/SpecialButton.js","component/ButtonRows.js","component/TopPanel.js","component/BottomPanel.js","logic/operate.js","logic/calculate.js","App.js","index.js"],"names":["Container","props","className","children","OutputRow","Row","Button","buttonClassName","type","textClassName","text","selectedOperator","value","onClick","clickHandler","DefaultButton","LongButton","FunctionButton","SpecialButton","ButtonRows","useState","setSelectedOperator","TopPanel","href","width","height","src","alt","data-recalc-dims","BottomPanel","toExponential","toString","length","operate","valueOne","valueTwo","operator","one","Big","two","plus","minus","times","div","formatString","string","charAt","substring","includes","Calculator","total","next","caclulatorObj","setCalculatorObj","calculatorObj","valueIsOperator","calculate","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc735e92.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nfunction Container(props) {\n  return <div className=\"Container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction OutputRow(props) {\n  return <div className=\"Calculator-row Output-row\">{props.children}</div>;\n}\n\nexport default OutputRow;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction Row(props) {\n  return <div className=\"Calculator-row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from 'react';\nimport \"../App.css\";\n\nfunction Button(props) {\n  let buttonClassName = \"Button-default\" + (` ${props.type}` || \"\" );\n  let textClassName = \"Text-default\" + (` ${props.text}` || \"\" );\n  if (props.selectedOperator === props.value) {\n    buttonClassName += \" Button-function-selected\";\n    textClassName += \" Text-default-selected\";\n  }\n\n  return (\n    <button\n      className={buttonClassName}\n      onClick={props.clickHandler}>\n      <div className={textClassName}>\n        {props.value}\n      </div>\n    </button>\n  );\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction DefaultButton(props) {\n  return <Button\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default DefaultButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction LongButton(props) {\n  return <Button\n          type=\"Button-long\"\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default LongButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction FunctionButton(props) {\n  return <Button\n          type=\"Button-function\"\n          value={props.value}\n          selectedOperator = {props.selectedOperator}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default FunctionButton;\n","import React from 'react';\nimport Button from './Button';\nimport \"../App.css\";\n\nfunction SpecialButton(props) {\n  return <Button\n          type=\"Button-special\"\n          text=\"Text-special\"\n          value={props.value}\n          clickHandler={props.clickHandler} />;\n}\n\nexport default SpecialButton;\n","import React, { useState } from 'react';\nimport Row from './Row';\nimport DefaultButton from './DefaultButton';\nimport LongButton from './LongButton';\nimport FunctionButton from './FunctionButton';\nimport SpecialButton from './SpecialButton';\nimport '../App.css';\n\nfunction ButtonRows(props) {\n  const [selectedOperator, setSelectedOperator] = useState(null);\n\n  function clickHandler(value) {\n    setSelectedOperator(value);\n    props.clickHandler(value);\n  }\n\n  return (\n    <div>\n      <Row>\n        <SpecialButton value=\"AC\"\n          clickHandler={() => clickHandler('AC')} />\n        <SpecialButton value=\"+/-\"\n          clickHandler={() => clickHandler('+/-')} />\n        <SpecialButton value=\"%\"\n          clickHandler={() => clickHandler('%')} />\n        <FunctionButton value=\"รท\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler('รท')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"7\"\n          clickHandler={() => clickHandler('7')} />\n        <DefaultButton value=\"8\"\n          clickHandler={() => clickHandler('8')} />\n        <DefaultButton value=\"9\"\n          clickHandler={() => clickHandler('9')} />\n        <FunctionButton value=\"x\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler('x')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"4\"\n          clickHandler={() => clickHandler('4')} />\n        <DefaultButton value=\"5\"\n          clickHandler={() => clickHandler('5')} />\n        <DefaultButton value=\"6\"\n          clickHandler={() => clickHandler('6')} />\n        <FunctionButton value=\"-\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler('-')} />\n      </Row>\n      <Row>\n        <DefaultButton value=\"1\"\n          clickHandler={() => clickHandler('1')} />\n        <DefaultButton value=\"2\"\n          clickHandler={() => clickHandler('2')} />\n        <DefaultButton value=\"3\"\n          clickHandler={() => clickHandler('3')} />\n        <FunctionButton value=\"+\"\n          selectedOperator={selectedOperator}\n          clickHandler={() => clickHandler('+')} />\n      </Row>\n      <Row>\n        <LongButton value='0'\n          clickHandler={() => clickHandler('0')} />\n        <DefaultButton value=\".\"\n          clickHandler={() => clickHandler('.')} />\n        <FunctionButton value=\"=\"\n          clickHandler={() => clickHandler('=')} />\n      </Row>\n    </div>\n  );\n}\n\nexport default ButtonRows;\n","import React from 'react';\nimport '../App.css';\n\nfunction TopPanel() {\n  return (\n    <div className=\"Top-panel\">\n      <a href=\"https://github.com/kekearif/react-ios-calculator-clone\">\n        <img width=\"149\"\n             height=\"149\"\n             src=\"https://github.blog/wp-content/uploads/2008/12/fo\nrkme_left_white_ffffff.png?resize=149%2C149\"\n             className=\"attachment-full size-full\" alt=\"Fork me on GitHub\"\n             data-recalc-dims=\"1\" />\n      </a>\n    </div>\n  );\n}\n\nexport default TopPanel;\n","import React from 'react';\nimport '../App.css';\n\nfunction BottomPanel() {\n  return (\n    <div className=\"Bottom-panel\">\n      <div className=\"Indicator\"></div>\n    </div>\n  );\n}\n\nexport default BottomPanel;\n","import Big from 'big.js';\n// Info about big.js library at https://mikemcl.github.io/big.js/#times\n\n// Constants\n\nconst DIGIT_LIMIT = 7;\n\n/**\n * Converts a value to exp if the number of digits is too long\n * @param  {string} value The value to check\n * @return {string}       The new value\n */\nfunction toExponential(value) {\n  if (value.toString().length > DIGIT_LIMIT) {\n    return value.toExponential(1);\n  }\n  return value;\n}\n\n/**\n * Applies an operation to two numbers and returns the new total\n * @param  {string} valueOne The first value\n * @param  {string} valueTwo The second value\n * @param  {string} operator The operator\n * @return {string}          The total value\n */\nfunction operate(valueOne, valueTwo, operator) {\n  if (valueOne === null) { return valueTwo; }\n  if (valueTwo === null) { return valueOne; }\n  \n  const one = Big(valueOne);\n  const two = Big(valueTwo);\n\n  switch (operator) {\n    case '+':\n      return toExponential(one.plus(two)).toString();\n    case '-':\n      return toExponential(one.minus(two)).toString();\n    case 'x':\n      return toExponential(one.times(two)).toString();\n    case 'รท':\n      return toExponential(one.div(two)).toString();\n    default:\n      break;\n  }\n}\n\nexport default operate;\n","import operate from './operate'\n\n/**\n * The max number of characters that can be displayed on the screen\n * @type {Number}\n */\nconst DIGIT_LIMIT = 7;\n\n/**\n * Function to check if the button value is an operator\n * @param  {string} value The button value\n * @return {boolean}      Returns true is the buttons value is an operator\n */\nfunction valueIsOperator(value) {\n  return ['+', '-', 'x', 'รท'].includes(value);\n}\n\n/**\n * Performs formatting for special cases such as decimal and +/-\n * @param  {string} string The string to format\n * @param  {string} value  The value tapped\n * @return {string}        The formatted string\n */\nfunction formatString(string, value) {\n  if (value==='-') {\n    if (string.charAt(0)==='-') {\n      return string.substring(1);\n    } else if (string.length < DIGIT_LIMIT) {\n      return '-' + string;\n    }\n    return string;\n  } else if (value==='.' && string.includes('.')) {\n    return string;\n  } else if (value==='.') {\n    return string + value;\n  } else if (string==='0') {\n    return value;\n  } else {\n    return string + value;\n  }\n}\n\n/**\n * Given an existing calculator object and button press value this will\n * calculate and return the new calculator object\n * @param  {object} calculatorObj The calculator object\n * @param  {string} value         The button value\n * @return {object}               The new calculator object\n */\nexport default function calculate(calculatorObj, value) {\n\n  if (value==='AC') {\n    return {\n      total: '0',\n      next: null,\n      operator: null\n    }\n  }\n\n  if (value==='+/-') {\n    if (calculatorObj.next) {\n      return {\n        total: calculatorObj.total,\n        next: formatString(calculatorObj.next, '-'),\n        operator: calculatorObj.operator\n      };\n    } else {\n      return {\n        total: formatString(calculatorObj.total, '-'),\n        next: calculatorObj.next,\n        operator: calculatorObj.operator\n      };\n    }\n  }\n\n  if (value==='%') {\n    if (calculatorObj.next) {\n      return {\n        total: calculatorObj.total,\n        next: operate(calculatorObj.next, '100', 'รท'),\n        operator: calculatorObj.operator\n      };\n    } else {\n      return {\n        total: operate(calculatorObj.total, '100', 'รท'),\n        next: calculatorObj.next,\n        operator: calculatorObj.operator\n      };\n    }\n  }\n\n  if (value==='=') {\n    if (calculatorObj.next) {\n      const total = operate(\n        calculatorObj.total,\n        calculatorObj.next,\n        calculatorObj.operator\n      );\n      return {\n        total,\n        next: null,\n        operator: null\n      };\n    } else if (calculatorObj.operator) {\n      // Operator will perform on current number twice\n      const total = operate(\n        calculatorObj.total,\n        calculatorObj.total,\n        calculatorObj.operator\n      );\n      return {\n        total,\n        next: null,\n        operator: null\n      };\n    } else {\n      return {\n        total: calculatorObj.total,\n        next: calculatorObj.next,\n        operator: calculatorObj.operator\n      }\n    }\n  }\n\n  // OPERATORS\n\n  if (valueIsOperator(value)) {\n    // If has a next value do the calculation and cache new operator\n    if (calculatorObj.next) {\n      const total = operate(\n        calculatorObj.total,\n        calculatorObj.next,\n        calculatorObj.operator\n      );\n      return {\n        total,\n        next: null,\n        operator: value\n      };\n    } else {\n      // Else cache the operator (note this also replaces existing operators)\n      return {\n        total: calculatorObj.total,\n        next: calculatorObj.next,\n        operator: value\n      };\n    }\n  }\n\n  // NUMBERS\n\n  // Operator present when number is tapped\n  if (calculatorObj.operator) {\n    // If a next value exists just append the number\n    if (calculatorObj.next) {\n      if (calculatorObj.next.length === DIGIT_LIMIT) { return calculatorObj; }\n      return {\n        total: calculatorObj.total,\n        next: formatString(calculatorObj.next, value),\n        operator: calculatorObj.operator\n      };\n    }\n    // Otherwise replace the number\n    return {\n      total: calculatorObj.total,\n      next: formatString('0', value),\n      operator: calculatorObj.operator\n    };\n  }\n\n  // Operator is not present when a number is tapped\n  if (calculatorObj.next) {\n    if (calculatorObj.next.length === DIGIT_LIMIT) { return calculatorObj; }\n    return {\n      total: null,\n      next: formatString(calculatorObj.next, value),\n      operator: calculatorObj.operator\n    };\n  } else {\n    return {\n      total: null,\n      next: formatString('0', value),\n      operator: calculatorObj.operator\n    };\n  }\n\n}\n","import React, { useState } from 'react';\nimport Container from './component/Container';\nimport OutputRow from './component/OutputRow';\nimport ButtonRows from './component/ButtonRows';\nimport TopPanel from './component/TopPanel';\nimport BottomPanel from './component/BottomPanel';\nimport calculate from './logic/calculate';\nimport './App.css';\n\nfunction Calculator() {\n  const [caclulatorObj, setCalculatorObj] = useState({\n    total: '0',\n    next: null,\n    operator: null\n  });\n\n  function clickHandler(value) {\n    setCalculatorObj(calculate(caclulatorObj, value));\n  }\n\n  // If the calculator object has a next value show that, otherwise show the\n  // total.\n  return (\n    <div className=\"Calculator\">\n      <TopPanel />\n      <OutputRow>\n        {caclulatorObj.next ? (caclulatorObj.next) : (caclulatorObj.total)}\n      </OutputRow>\n      <ButtonRows clickHandler={clickHandler} />\n      <BottomPanel />\n    </div>\n  );\n}\n\nfunction App() {\n  return <Container><Calculator /></Container>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}